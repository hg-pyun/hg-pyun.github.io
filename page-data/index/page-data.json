{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Dev Log"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"…","fields":{"slug":"/union-find-algorithm/"},"frontmatter":{"date":"December 05, 2020","title":"Union-Find Algorithm","description":"서로 다른 두 집합을 병합하는 방법. Union-Find에 대해 알아보자."}}},{"node":{"excerpt":"재택근무…","fields":{"slug":"/data-structure-for-javascript/"},"frontmatter":{"date":"May 03, 2020","title":"Data Structure For JavaScript","description":"자료구조를 자바스크립트로 구현해 보자."}}},{"node":{"excerpt":"전개 구문(Spread Syntax)와 Rest Parameter를 딱히 구분해서 공부하진 않았는데, 확실하게 기억해 두지 않으니 사용할때마다 헷갈린다. 이번 기회에 확실하게 정리해 두도록 하자. Spread Syntax…","fields":{"slug":"/spread-syntax-and-rest-parameter/"},"frontmatter":{"date":"November 03, 2019","title":"Spread Syntax and Rest Parameter","description":"전개 구문(Spread Syntax)와 Rest Parameter를 딱히 구분해서 공부하진 않았는데, 확실하게 기억해 두지 않으니 사용할때마다 헷갈린다. 이번 기회에 확실하게 정리해 두도록 하자."}}},{"node":{"excerpt":"TC-39 Github에 패턴 매칭(Parttern-Matching)이 Stage 0에서 1로 한단계 등급이 상향됬었다. Stage1은 proposal 단계로 앞으로 TC-3…","fields":{"slug":"/pattern-matching-in-javascript/"},"frontmatter":{"date":"September 30, 2019","title":"Pattern Matching in JavaScript","description":"TC-39 Github에 패턴 매칭(Parttern-Matching)이 Stage 0에서 1로 한단계 등급이 상향됬었다. Stage1은 proposal 단계로 앞으로 TC-39 위원회에서 논의할 예정이며, 구체적인 데모에 대한 코드도 포함되어야 한다. 아직 Stage2(draft)와 Stage3(candidate), 그리고 stage4(finished)를 거쳐 정식으로 스펙에 추가되려면 갈 길이 멀지만 어떤 기능을 가지고 있고 또 어떻게 사용할 수 있는지 간단하게나마 미리 알아보도록 하자."}}},{"node":{"excerpt":"ES2015가 나온지 꽤 오랜 시간이 지났다. function-bind, rest spread, decorator…","fields":{"slug":"/javascript-optional-chaining/"},"frontmatter":{"date":"September 30, 2019","title":"Javascript Optional Chaining","description":"ES2015가 나온지 꽤 오랜 시간이 지났다. function-bind, rest spread, decorator 등 개발을 편하게 도와주는 문법들이 정의되면서 개발을 하는데 한층 더 수월해지는 것 같다. 오늘은 최근 개발하면서 사용하기 도입하기 시작한 꿀같은 기능. Optional Chaining에 대해서 정리해 보고자 한다."}}},{"node":{"excerpt":"이전에 Javascaript의 Iterator…","fields":{"slug":"/beginning-javascript-iterator-and-generator/"},"frontmatter":{"date":"January 12, 2019","title":"Beginning Javascript Iterator and Generator","description":"이전에 Javascaript의 Iterator에 대해서 몇가지 다뤄보았었는데, 도입된지 얼마 안된 스펙이다보니 자유 자재로 다루기가 아직 버겁다는 생각이 많이 들었다. 또한 최근 이터레이터와 제네레이터를 이용해 멋지게 구현한 코드들을 접하고 나서, 연습을 많이 해야겠다는 생각이들어 여기에 정리해 보고자 한다."}}},{"node":{"excerpt":"최근 React v16버전으로 업데이트되면서 여러가지 개발 효율성을 높여주는 API들이 추가되고 있다. 최근 회사에서 시작한 스터디에서 이번에 React Conf 2018에서 소개된 Hooks에 대해 공부하기로하여 여기에 정리해 본다. Why…","fields":{"slug":"/why-react-hooks/"},"frontmatter":{"date":"January 05, 2019","title":"Why React Hooks","description":"최근 React v16버전으로 업데이트되면서 여러가지 개발 효율성을 높여주는 API들이 추가되고 있다. 최근 회사에서 시작한 스터디에서 이번에 React Conf 2018에서 소개된 Hooks에 대해 공부하기로하여 여기에 정리해 본다."}}},{"node":{"excerpt":"Higher-Order Function. 한국어로 고차함수라 부르는 이 개념은 함수형 프로그래밍을 을 할 때 많이 사용 한다. Higher-Order Function(이하 HOF…","fields":{"slug":"/what-is-higher-order-function/"},"frontmatter":{"date":"October 28, 2018","title":"Higher-Order Function 이란 무엇인가","description":"Higher-Order Function. 한국어로 고차함수라 부르는 이 개념은 함수형 프로그래밍을 을 할 때 많이 사용 한다. Higher-Order Function(이하 HOF)를 사용하면 보다 유연하고 반복을 줄일 수 있는 코드를 작성할 수 있다. 이번 기회에 간단한 개념 정리와 어떻게 써먹을 수 있을 지 정리해 보도록 하자."}}},{"node":{"excerpt":"지난 포스트였던 Javascript Iterator에서 잠깐 언급했었던 async-await에 관해 이야기해 보도록 하자. 시작하기에 앞서 이 포스트에서는 async-await에 대한 문법을 다루지 않는다. async-wait…","fields":{"slug":"/how-to-implement-async-await/"},"frontmatter":{"date":"October 07, 2018","title":"Async-await는 어떻게 구현하는가","description":"지난 포스트였던 Javascript Iterator에서 잠깐 언급했었던 async-await에 관해 이야기해 보도록 하자. 시작하기에 앞서 이 포스트에서는 async-await에 대한 문법을 다루지 않는다. async-wait가 어떤 배경을 가지고, 어떤 방법을 통해 구현이 되어있는지 그 근원에 대한 탐구를 할 생각이다."}}},{"node":{"excerpt":"프로그래밍 설계를 하다보면 객체지향 5대원칙 또는 SOLID…","fields":{"slug":"/solid/"},"frontmatter":{"date":"December 14, 2015","title":"SOLID 원칙","description":"프로그래밍 설계를 하다보면 객체지향 5대원칙 또는 SOLID 원칙이란 단어를 들어본 적이 있을 것이다. 당시에 구글링을 하여 찾아보았지만 프로그래밍 내공이 부족하여 잘 이해가 되지 않았다. 그때보다 조금(?) 나아진 현재 다시 공부하면서 나름대로 이해한 내용을 여기에 정리해 보고자 한다."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}